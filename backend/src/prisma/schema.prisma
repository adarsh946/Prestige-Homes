// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(auto()) @map("_id") @db.ObjectId
  fullname        String
  email           String   @unique
  password        String   
  avatar          String
  createdAt       DateTime @default(now())
  posts           Posts[]
  savedPost       SavedPost?
}

model Posts {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  price          Int
  images          String[]
  address        String
  city           String
  bedroom        Int
  bathroom       Int
  latitude       Int
  logitude       Int
  type           Type
  property       Property
  user           User   @relation(fields: [userId], references: [id])
  userId         String   @db.ObjectId
  postDetail     PostDetail?
  savedPost      SavedPost?
}

enum Type {
  buy
  rent
}

enum Property {
  flat
  condo
  land
  house
}

model PostDetail {
  id             String  @id @default(auto()) @map("_id")  @db.ObjectId
  desc           String
  utilites       String?
  income         String?
  size           Int?
  school         Int?
  bus            Int?
  restaurant     Int?
  post           Posts @relation(fields: [postId], references: [id])
  postId         String   @unique @db.ObjectId  


}

model SavedPost {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  user          User  @relation(fields: [userId], references: [id])
  post          Posts   @relation(fields: [userId], references: [id]) 
  postId        String  @unique @db.ObjectId
  userId        String  @unique @db.ObjectId
}